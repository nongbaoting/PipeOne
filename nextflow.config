
params {
  outdir = './results'
  clusterOptions = false
  executor = 'local'
  queue = ''
  scratch = "${launchDir}/tmp"
  nf_required_version = '20.7.0' //Minimum version of Nextflow required
  maxForks = 4

}

includeConfig 'conf/base.config'
includeConfig 'conf/genomes.config'
profiles {
  conda {includeConfig 'conf/conda.config'}
  docker {includeConfig 'conf/docker.config'}
  singularity {includeConfig 'conf/singularity.config'}
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
  enabled = true
  file = "${params.outdir}/pipeline_info/pipeline_timeline.html"
}
report {
  enabled = true
  file = "${params.outdir}/pipeline_info/pipeline_report.html"
}
trace {
  enabled = true
  file = "${params.outdir}/pipeline_info/pipeline_trace.txt"
}

manifest {
  name = 'nong-pipeline'
  author = 'Baoting Nong'
  homePage = 'https://github.com/nongbaoting'
  description = 'Nextflow RNA-Seq analysis pipeline.'
  mainScript = 'main.nf'
  nextflowVersion = '>=20.07.1'
  version = '2.0.0'
}


// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if(type == 'memory'){
    try {
      if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'time'){
    try {
      if(obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'cpus'){
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}


